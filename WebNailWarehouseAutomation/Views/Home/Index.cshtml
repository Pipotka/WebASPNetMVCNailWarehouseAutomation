@model IEnumerable<WebNailWarehouseAutomation.Models.Nail>
@using WebNailWarehouseAutomation.Helpers;
@using System.Reflection;
@using System.ComponentModel.DataAnnotations;
@{
    ViewData["Title"] = "Warehouse condition";
}

<h1>Список гвоздей на складе</h1>

<table class="table table-dark table-striped">
    @{
        int totalNumberOfNails = 0;
        int count = 0;
        double AVGPrice = 0.0;
        double totalCostIncludingVAT = 0.0;
        double TotalCostWithVAT = 0.0;
        foreach (var nail in Model)
        {
            count++;
            totalNumberOfNails += nail.Quantity;
            AVGPrice += nail.PriceExcludingVAT;
            totalCostIncludingVAT += nail.PriceExcludingVAT * nail.Quantity;
            TotalCostWithVAT += nail.PriceIncludingVAT(Nail.VAT) * nail.Quantity;
        }
        if (count > 0)
        {
            AVGPrice /= count;
        }
        var TotalNumberOfNailsString = $"Общее количество гвоздей на складе: {totalNumberOfNails} шт.";
        var TotalCostIncludingVATOfGoodsString = $"Общая стоимость без НДС: {totalCostIncludingVAT:C2} руб.";
        var NumberOfProductLinesString = $"Количество товарных позиций: {count}";
        var TotalCostWithVATString = $"Общая стоимость с НДС: {TotalCostWithVAT:C2}";
        <tr>
            <th>
                @TotalNumberOfNailsString
            </th>
            <th>
                @TotalCostIncludingVATOfGoodsString
            </th>
            <th>
                @NumberOfProductLinesString
            </th>
            <th>
                @TotalCostWithVATString
            </th>
        </tr>
    }
</table>
<a type="button" asp-action="Create" class="btn btn-success">Добавить гвозди</a>
<table class="table table-dark table-striped">
    @{
        Type soursType = typeof(Nail);
        int numberOfColumns = 0;
        foreach (PropertyInfo property in soursType.GetProperties())
        {
            numberOfColumns++;
        }
        <tr>
            @foreach (PropertyInfo property in soursType.GetProperties())
            {
                @foreach (DisplayAttribute attr in property.GetCustomAttributes(typeof(DisplayAttribute)))
                {
                    <th>@attr.GetName()</th>
                }
            }
            <th>Изменить объект</th>
            <th>Удалить объект</th>
        </tr>
    }
    @foreach (var nail in Model)
    {
        <tr>
            <td>@nail.Name</td>
            <td>@nail.Diameter</td>
            <td>@nail.Length</td>
            <td>@nail.Material.DisplayName()</td>
            <td>@nail.Quantity</td>
            <td>@nail.PriceExcludingVAT.ToString("c")</td>
            <td>
                <a asp-action="Edit"
                    asp-asp-controller="Home"
                    type="button" class="btn btn-warning"
                    asp-route-id="@nail.id">Изменить</a>
            </td>
            <td>
                <form asp-controller="Home"
                        asp-action="Delete"
                        method="post"
                        asp-route-id="@nail.id">
                    <input type="submit" class="btn btn-danger" value="Удалить" />
                </form>
            </td>
        </tr>

    }
</table>
@*
 *@